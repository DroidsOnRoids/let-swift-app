# SwiftLint version 0.20.1

disabled_rules: # rule identifiers to exclude from running
  - cyclomatic_complexity
  - trailing_whitespace
  - void_return
  - unused_optional_binding
  - force_cast
opt_in_rules: # some rules are only opt-in
  - closure_end_indentation
  - closure_spacing
  - empty_count
  - explicit_init
  - file_header
  - first_where
  - operator_usage_whitespace
  - overridden_super_call
  - private_outlet
  - prohibited_super_call
  - redundant_nil_coalescing
  - vertical_parameter_alignment_on_call
excluded: # paths to ignore during linting. Takes precedence over `included`.
  - Pods

# configurable rules can be customized from this configuration file
# binary rules can set their severity level
type_body_length: 300
function_body_length: 80
line_length: 240
type_name:
  max_length: 60
identifier_name:
  allowed_symbols:
    - ¨
  min_length: 1
  max_length: 60
file_header:
  required_pattern: |
    \/\/
    \/\/  .*?\.swift
    \/\/  LetSwift
    \/\/
    \/\/  Created by .*? on \d{2}\.\d{2}\.\d{4}\.
    \/\/  Copyright © \d{4} Droids On Roids\. All rights reserved\.
    \/\/
    \/\/  Licensed under the Apache License, Version 2\.0 \(the "License"\);
    \/\/  you may not use this file except in compliance with the License\.
    \/\/  You may obtain a copy of the License at
    \/\/
    \/\/       http:\/\/www\.apache\.org\/licenses\/LICENSE-2\.0
    \/\/
    \/\/  Unless required by applicable law or agreed to in writing, software
    \/\/  distributed under the License is distributed on an "AS IS" BASIS,
    \/\/  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied\.
    \/\/  See the License for the specific language governing permissions and
    \/\/  limitations under the License\.
    \/\/
